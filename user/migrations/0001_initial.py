# Generated by Django 3.0.4 on 2020-04-14 20:43

from django.db import migrations, models
import django.db.models.deletion
import user.managers.UserManager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('curso', '0003_auto_20200414_1337'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('matricula', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, verbose_name='e-mail')),
                ('nome_completo', models.CharField(max_length=70, verbose_name='Nome Completo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_avaliador', models.BooleanField(default=False)),
                ('is_coordenador', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='curso.Curso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-matricula', 'nome_completo'],
                'permissions': [('can_add_resultado', 'Pode adicionar resultado a solicitacao'), ('can_add_avaliador', 'Pode atribuir avaliador a solicitacao')],
            },
            managers=[
                ('objects', user.managers.UserManager.UserManager()),
            ],
        ),
    ]
